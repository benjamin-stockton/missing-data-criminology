---
title: "Sentencing Analysis with Pattern Mixture Modeling"
author: 
    - name: C. Clare Strange
      email: cs3846@drexel.edu
      affiliations:
          - name: Department of Criminology and Justice Studies, Drexel University
    - name: Benjamin Stockton
      email: benjamin.stockton@uconn.edu
      orcid: 0000-0002-3820-5293
      affiliations: 
          - name: Department of Statistics, University of Connecticut
    - name: Ofer Harel
      affiliations: 
          - name: Department of Statistics, University of Connecticut
date: today
number-sections: true 
number-depth: 2
toc: false
format:
  pdf:
    keep-tex: true
execute: 
  cache: true
  echo: false
  warning: false
bibliography: ../Literature/Criminology.bib
fig-height: 5
fig-width: 8
abstract: ""
keywords: incomplete data, pattern-mixture model
editor: visual
---

```{r}
#| label: set-up
library(dplyr, warn.conflicts = FALSE, quietly = TRUE)
library(ggplot2, warn.conflicts = FALSE, quietly = TRUE)
library(mice, warn.conflicts = FALSE, quietly = TRUE)
library(broom.mixed)
library(VIM)
```


## Methods

## Analysis


```{r}
#| label: load-data
df <- readr::read_csv("../Data/PCS-most-serious-sentence-2010-2019-pmm.csv",
                      show_col_types = FALSE)

df <- df |> mutate(
        YEAR = as.factor(YEAR),
        INCAR = case_when(
            JP_MIN == 0 ~ 0,
            JP_MIN > 0 ~ 1,
            TRUE ~ NA
        ),
        SEX = case_when(
            MALE == 1 ~ "Male",
            MALE == 0 ~ "Female",
            TRUE ~ NA
        ),
        OFF_RACE = case_when(
            OFF_RACER == 1 ~ "WHITE",
            OFF_RACER == 2 ~ "BLACK",
            OFF_RACER == 3 ~ "LATINO",
            OFF_RACER == 4 ~ "OTHER",
            TRUE ~ NA
        ),
        PRVREC = case_when(
            PRSR == 0 ~ "0",
            PRSR == 1 ~ "1/2/3",
            PRSR == 2 ~ "4/5",
            PRSR == 3 ~ "REVOC/RFEL",
            TRUE ~ NA
        ),
        CRIME = case_when(
            CRIMETYPE == 1 ~ "Persons",
            CRIMETYPE == 2 ~ "Property",
            CRIMETYPE == 3 ~ "Drug",
            CRIMETYPE == 4 ~ "DUI",
            CRIMETYPE == 5 ~ "Other",
            TRUE ~ NA
        )
    ) |>
    select(
        -c(OFF_RACER, PRSR, MALE, CRIMETYPE)
    )

df$OFF_RACE <- factor(df$OFF_RACE, levels = c("WHITE", "BLACK", "LATINO", "OTHER"))
```

```{r}
md.pattern(df, rotate.names = TRUE)
```

```{r}
df |>
    filter(JP_MIN_MON > 0) |>
    group_by(YEAR) |>
    summarize(
        mean_JP_MIN_MON = mean(JP_MIN_MON, na.rm = TRUE),
        sd_JP_MIN_MON = sd(JP_MIN_MON, na.rm = TRUE),
        min_JP_MIN_MON = min(JP_MIN_MON, na.rm = TRUE),
        median_JP_MIN_MON = median(JP_MIN_MON, na.rm = TRUE),
        max_JP_MIN_MON = max(JP_MIN_MON, na.rm = TRUE),
        p_INCAR = mean(INCAR, na.rm = TRUE)
    )

df |>
    filter(JP_MIN_MON > 0) |>
    ggplot(aes(JP_MIN_MON)) +
        geom_density() +
        facet_wrap(YEAR~., scales = "free_y")
df |>
    filter(JP_MIN_MON > 0) |>
    ggplot(aes(as.factor(YEAR), JP_MIN_MON)) +
        geom_violin(draw_quantiles = c(0.025, 0.25, 0.5, 0.75, 0.975)) +
        geom_point(size = 0.5)
```

```{r}
ggplot(df, aes(CRIME, JP_MIN_MON)) +
    geom_violin(draw_quantiles = c(0.025, 0.25, 0.5, 0.75, 0.975)) +
    geom_point(size = 0.5)
```

```{r}
ggplot(df, aes(OFF_RACE, JP_MIN_MON)) +
    geom_violin(draw_quantiles = c(0.025, 0.25, 0.5, 0.75, 0.975)) +
    geom_point(size = 0.5)
```

```{r}
ggplot(df, aes(INCAR, fill = CRIME)) +
    geom_bar(position = "dodge")
```

```{r}
#| label: check-lognormal-sent
sent_non0 <- df$JP_MIN_MON[which(df$INCAR == 1)]
s <- sample(length(sent_non0), size = 10000, replace = FALSE)

qqnorm(sent_non0[s])
qqline(sent_non0[s])

qqnorm(log(sent_non0[s]))
qqline(log(sent_non0[s]))
```

```{r}
fluxplot(df)
```

```{r}
df |> 
    select(
        JP_MIN_MON, OFF_RACE, DOSAGE, RECMIN, PRVREC, CRIME, TRIAL, SEX
    ) |> 
    aggr(sortby = "JP_MIN_MON", plot = FALSE) |>
    plot(numbers = TRUE, prop = FALSE)
```


I'll prepare the data for analysis next. First, I'll center and scale the numeric predictors which are Offense Gravity Score (OGS), defendant age, and the square of each. Then I'll use MICE to multiply impute the incomplete variables with predictive mean matching. For now I'll use $M = 10$ since less than 5% of all observations are missing (mainly in defendant race).


```{r}
#| label: mice
df[s,c("OGS", "OGSQ", "DOSAGE", "DOSAGEQ")] <- scale(df[s,c("OGS", "OGSQ", "DOSAGE", "DOSAGEQ")], center = TRUE, scale = TRUE)

imps0 <- mice(df[s,], m = 1, method = "pmm", maxit = 0)

mthd <- imps0$method
mthd["JP_MIN_MON"] <-  "~I(JP_MIN / 30)"
# mthd[c("RECMIN", "INCAR", "OFF_RACE", "PRVREC")] <- "cart"
mthd

pred_mat <- imps0$predictorMatrix
pred_mat[,"JPR_ID"] <- 0
pred_mat

imps <- mice(df[s,], m = 10, method = mthd, predictorMatrix = pred_mat, maxit = 10)

plot(imps)
```


### Logistic Regression on Incarceration

I'll fit a logistic regression like before as a sanity check. The estimated odds ratio for increased odds of incarceration for a Black defendant over a White defendant should be roughly 1.25 as we saw in the complete case analysis in the previous paper.


```{r}
#| label: mice-glm
fit_incar <- with(imps, glm(INCAR ~ DOSAGE + DOSAGEQ + SEX*OFF_RACE + OGS + OGSQ +
                     PRVREC + RECMIN + CRIME + TRIAL +
                     as.factor(YEAR) + as.factor(COUNTY),
                 family = binomial(link = "logit"),
                 x = FALSE, y = FALSE,
                 model = FALSE))
```

```{r}
#| label: tbl-glm-summary
smry <- summary(pool(fit_incar))

smry |>
    filter(stringr::str_sub(term, 1,3) != "as.")
```


From the logistic regression fit with MI and $M = 10$ imputations done using predictive mean matching, we found that a Black defendant is `r round(exp(0.2225), 2)` (95% CI of (`r round(exp(0.2225 - 1.96 * 0.0064), 3)`, `r round(exp(0.2225 + 1.96 * 0.0064), 3)`)times more likely to be sentenced to incarceration than an otherwise similar White defendant.

We re-analyze the data using a generalized linear mixed model and again taking the binary incarceration decision as the outcome and random effects for the Year and County with random slopes for the most serious Crime type by County.


```{r}
#| label: mice-glmm
# fit_incar_mm <- with(imps, lme4::glmer(INCAR ~ DOSAGE + DOSAGEQ + SEX*OFF_RACE + OGS + OGSQ +
#                      PRVREC + RECMIN + CRIME + TRIAL +
#                      (1 | YEAR) + (1 + CRIME | COUNTY),
#                  family = binomial(link = "logit"),
#                  verbose = 0))

c_dat <- complete(imps, "all")
fit_list <- parallel::mclapply(c_dat, 
                               mc.cores = 10,
                               function(d1) {
                 
                 fit <- lme4::glmer(INCAR ~ DOSAGE + DOSAGEQ + SEX*OFF_RACE + OGS + OGSQ +
                             PRVREC + RECMIN + CRIME + TRIAL +
                             (1 | YEAR) + (1 + CRIME | COUNTY),
                             data = d1,
                             family = binomial(link = "logit"),
                             verbose = 0)
                 return(fit)
              })

fit_incar_mm <- as.mira(fit_list)
```

```{r}
#| label: glmm-sum

smry <- summary(pool(fit_incar_mm))

smry |>
    filter(stringr::str_sub(term, 1,3) %in% c("YEA", "COU"))
```


### Hurdle Models

A hurdle model models data with a high number of zeros (compared to standard distributions). The model places a probability point mass $P(Y = 0) = \theta$ at $Y = 0$ and uses a truncated (at zero) probability distribution for the non-zero sample space $P(Y \neq 0) = p_{y \neq 0}(y)$. This differs from a zero-inflated model which is a mixture of two distributions (includes the non-zero distribution's zero probability) as the hurdle model truncates the non-zero distribution.

I'll create a GLM with brms and the log normal hurdle distribution.


```{r}
#| label: brms-hurdle-model-prior

library(brms)

(bprior <- get_prior(JP_MIN_MON ~ DOSAGE + DOSAGEQ + SEX*OFF_RACE + OGS + OGSQ +
                     PRVREC + RECMIN + CRIME + TRIAL +
                     (1 | YEAR) + (1 + CRIME |COUNTY),
               data = df[s,],
               family = hurdle_lognormal(link = "identity", link_sigma = "log", link_hu = "logit")))


```

```{r}
#| label: brms-hurdle-model
fit_brm <- brm(JP_MIN_MON ~ DOSAGE + DOSAGEQ + SEX*OFF_RACE + OGS + OGSQ +
                     PRVREC + RECMIN + CRIME + TRIAL +
                     (1 | YEAR) + (1 + CRIME |COUNTY),
               data = df[s,],
               family = hurdle_lognormal(link = "identity", link_sigma = "log", link_hu = "logit"),
               prior = bprior,
               chains = 2, cores = 2, iter = 2000, refresh = 1000,
               file = "brms_fit/brms-hurlde-si.fit",
               file_refit = "on_change",
               save_model = "brms-hurdle-si.stan")
```

```{r}
#| label: brms-hurdle-model-summary
summary(fit_brm)

plot(fit_brm, ask = FALSE, nrow = 3)
```


From the hurdle model, we find that Black defendants do not receive different sentence lengths compared to White defendants (95% CI of (-0.11, 0.03)). In terms of 95% CIs we also find that there doesn't seem to be a difference in sentence lengths between male and female defendants either between or within each racial group.


```{r}
plot(conditional_effects(fit_brm, effects = "OFF_RACE:SEX"), ask = FALSE)
```

